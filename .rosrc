#!/bin/bash

rosdistro="melodic"
ros2distro="dashing"

# if test -e /opt/ros/$rosdistro/setup.bash
# then
#   source /opt/ros/$rosdistro/setup.bash
# fi

# if test -e $marked/catkin
# then
#   source $(cat $marked/catkin)/devel/setup.bash
# fi

alias cdc='cd $(cat $marked/catkin)'
alias cds='cd $(cat $marked/catkin)/src'


function make()
{
  if test -e $(pwd)/Makefile
  then
    command make $@
  else
    pushd $(cat $marked/catkin) && command catkin_make $@ && source devel/setup.bash
    rospack profile | sed -E "s/(.*)(\s\**\s)(.*)/\3/g" | grep -e "\/.*" | sort
    popd
  fi
}

function build()
{
  if test -e $marked/catkin
  then
    pushd $(cat $marked/catkin)
    if test -e devel/setup.bash
    then
      command catkin build $@ && source devel/setup.bash
    fi
    if test -e install/local_setup.bash
    then
      command colcon build --symlink-install $@ && source install/local_setup.bash
    fi
    rospack profile | sed -E "s/(.*)(\s\**\s)(.*)/\3/g" | grep -e "\/.*" | sort
    popd
  fi
}

function clean()
{
  if test -e $marked/catkin
  then
    pushd $(cat $marked/catkin)
    if test -e build
    then
      rm -rf build
    fi
    if test -e devel
    then
      rm -rf devel
    fi
    if test -e install
    then
      rm -rf install
    fi
    if test -e log
    then
      rm -rf log
    fi
    if test -e logs
    then
      rm -rf logs
    fi
    popd
  fi
}

function sros()
{
  source /opt/ros/$rosdistro/setup.bash
  export CHOOSE_ROS_DISTRO=$rosdistro
}

function sros2()
{
  source /opt/ros/$ros2distro/setup.bash
  export CHOOSE_ROS_DISTRO=$ros2distro
}

function swros()
{
  if test -e $marked/catkin
  then
    pushd $(cat $marked/catkin)
    if test -e devel/setup.bash
    then
      source devel/setup.bash
    fi
    if test -e install/local_setup.bash
    then
      source install/local_setup.bash
    fi
  fi
  rospack profile | sed -E "s/(.*)(\s\**\s)(.*)/\3/g" | grep -e "\/.*" | sort
  if test -e $marked/catkin
  then
    popd
  fi
}

function sros12()
{
  source /opt/ros/$rosdistro/setup.bash
  source /opt/ros/$ros2distro/setup.bash
}

function dros()
{
  pushd $(cat $marked/catkin) && rosdep install -iry --from-paths src
  popd
}

function tros()
{
  pushd $(cat $marked/catkin) > /dev/null
  colcon test
  colcon test-result
  popd > /dev/null
}

function recursive_wstool_update()
{
  pushd $(cat $marked/catkin)
  wstool init src

  echo "hoge" > /tmp/wstool_outputs

  while test "$(cat /tmp/wstool_outputs)" != "Merge caused no change, no new elements found"
  do
    find -regextype posix-basic -regex "\./src/.*/.*\.rosinstall" | xargs -n1 wstool merge --target-workspace=src | uniq | tee /tmp/wstool_outputs
    wstool update --target-workspace=src
  done

  rm /tmp/wstool_outputs
  popd
}

function clang_autoformat()
{
  clang-format -i -style=file $@
}

function recursive_clang_autoformat()
{
  find . -name '*.h' -or -name '*.hpp' -or -name '*.cpp' | xargs clang-format -i -style=file $1
}

function pep8_autoformat()
{
  autopep8 --in-place --aggressive --aggressive $@
}

function recursive_pep8_autoformat()
{
  find . -name '*.py' | xargs autopep8 --in-place --aggressive --aggressive $1
}
